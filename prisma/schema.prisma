// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  cubeSessions  CubeSession[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model CubeSession {
  id          String   @id @default(cuid())
  name        String
  puzzleType  String
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  solves      Solve[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Solve {
  id          String      @id @default(cuid())
  time        Int         // milliseconds
  scramble    String
  penalty     String?     // 'DNF' or '+2'
  puzzleType  String
  sessionId   String
  cubeSession CubeSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  timestamp   DateTime    @default(now())

  @@index([sessionId])
  @@index([timestamp])
}